"use strict";(self.webpackChunkluminescent_team=self.webpackChunkluminescent_team||[]).push([[78889],{603905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>p});var r=n(667294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},m="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=u(n),h=o,p=m["".concat(c,".").concat(h)]||m[h]||f[h]||i;return n?r.createElement(p,a(a({ref:t},l),{},{components:n})):r.createElement(p,a({ref:t},l))}));function p(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[m]="string"==typeof e?e:o,a[1]=s;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},463614:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>f,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var r=n(487462),o=(n(667294),n(603905));const i={},a="UV Connection",s={unversionedId:"lumitool-guides/characters/monobehaviours/uv-connection",id:"lumitool-guides/characters/monobehaviours/uv-connection",title:"UV Connection",description:"This monobehaviour exists to solve a quirk with Unity's UV system that will transform the UVs of every material on a SkinnedMeshRenderer when you transform just one.",source:"@site/rom-hacking/lumitool-guides/characters/monobehaviours/6-uv-connection.md",sourceDirName:"lumitool-guides/characters/monobehaviours",slug:"/lumitool-guides/characters/monobehaviours/uv-connection",permalink:"/rom-hacking/lumitool-guides/characters/monobehaviours/uv-connection",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"docs",previous:{title:"Color Variation",permalink:"/rom-hacking/lumitool-guides/characters/monobehaviours/color-variation"},next:{title:"Editing music and sound files.",permalink:"/rom-hacking/category/audio"}},c={},u=[],l={toc:u},m="wrapper";function f(e){let{components:t,...i}=e;return(0,o.kt)(m,(0,r.Z)({},l,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"uv-connection"},"UV Connection"),(0,o.kt)("p",null,"This monobehaviour exists to solve a quirk with Unity's UV system that will transform the UVs of every material on a SkinnedMeshRenderer when you transform just one.\nIt is primarily used by BDSP characters to offset the UVs of their eye materials between different sets of eyes.\nWe cannot currently preview the results in the Unity editor but an animation with the values in the first image ought to provide the results found in the second:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"uv-connection-1",src:n(252408).Z,width:"1600",height:"623"})),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"uv-connection-2",src:n(170575).Z,width:"910",height:"512"})," ",(0,o.kt)("img",{alt:"uv-connection-3",src:n(371734).Z,width:"256",height:"512"})),(0,o.kt)("p",null,"In the above example, we offset the coordinates of the eye UVs (Material 0 and 1 on the SkinnedMeshRenderer of the breeder) by 0.75 on the Y axis\nvia animation, using the UV Connection mono."))}f.isMDXComponent=!0},252408:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/uv-connection-1-426848e4df8faddae035ab60f8cfbbe6.webp"},170575:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/uv-connection-2-aee495d3100f774aece5d27f2b8ce02d.webp"},371734:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/uv-connection-3-b8b4074b06d14f6ef75724afba68a962.webp"}}]);