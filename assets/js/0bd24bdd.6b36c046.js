"use strict";(self.webpackChunkluminescent_team=self.webpackChunkluminescent_team||[]).push([[586970],{603905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var r=n(667294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),p=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(o.Provider,{value:t},e.children)},m="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,k=m["".concat(o,".").concat(d)]||m[d]||s[d]||l;return n?r.createElement(k,i(i({ref:t},u),{},{components:n})):r.createElement(k,i({ref:t},u))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=d;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c[m]="string"==typeof e?e:a,i[1]=c;for(var p=2;p<l;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},417216:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var r=n(487462),a=(n(667294),n(603905));const l={},i="(348) _2VS2_BATTLE_CHECK",c={unversionedId:"scripting/commands/battle/348-2vs2-battle-check",id:"scripting/commands/battle/348-2vs2-battle-check",title:"(348) _2VS2_BATTLE_CHECK",description:"Effect",source:"@site/rom-hacking/scripting/commands/battle/348-2vs2-battle-check.md",sourceDirName:"scripting/commands/battle",slug:"/scripting/commands/battle/348-2vs2-battle-check",permalink:"/luminescent-team-dev/rom-hacking/scripting/commands/battle/348-2vs2-battle-check",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"(343) _TRAINER_LOSE_CHECK",permalink:"/luminescent-team-dev/rom-hacking/scripting/commands/battle/trainer-lose-check"},next:{title:"Dialogue",permalink:"/luminescent-team-dev/rom-hacking/category/dialogue"}},o={},p=[{value:"Effect",id:"effect",level:2},{value:"Return Values",id:"return-values",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Example",id:"example",level:2}],u={toc:p},m="wrapper";function s(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"348-_2vs2_battle_check"},"(348) _2VS2_BATTLE_CHECK"),(0,a.kt)("h2",{id:"effect"},"Effect"),(0,a.kt)("p",null,"Returns if the player can participate in 2VS2 battles (player versus 2 trainers)."),(0,a.kt)("p",null,"The player needs at least 2 Pok\xe9mon in their party that can fight."),(0,a.kt)("h2",{id:"return-values"},"Return Values"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Value"),(0,a.kt)("th",{parentName:"tr",align:null},"Meaning"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"0"),(0,a.kt)("td",{parentName:"tr",align:null},"Can't participate")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"1"),(0,a.kt)("td",{parentName:"tr",align:null},"Can participate")))),(0,a.kt)("h2",{id:"syntax"},"Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"_2VS2_BATTLE_CHECK(result)\n")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Argument"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:null},"Types"),(0,a.kt)("th",{parentName:"tr",align:null},"Required"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"result")),(0,a.kt)("td",{parentName:"tr",align:null},"The work to put the result into"),(0,a.kt)("td",{parentName:"tr",align:null},"Work"),(0,a.kt)("td",{parentName:"tr",align:null},"Required")))),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"ev_dummy:\n_2VS2_BATTLE_CHECK(@SCWK_ANSWER)\n")),(0,a.kt)("p",null,"The above script will check if the player can participate a 2VS2 battle and store it in the work ",(0,a.kt)("inlineCode",{parentName:"p"},"@SCWK_ANSWER"),"."))}s.isMDXComponent=!0}}]);