"use strict";(self.webpackChunkluminescent_team=self.webpackChunkluminescent_team||[]).push([[264654],{603905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(667294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,h=m["".concat(s,".").concat(d)]||m[d]||c[d]||i;return n?a.createElement(h,o(o({ref:t},u),{},{components:n})):a.createElement(h,o({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},383533:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(487462),r=(n(667294),n(603905));const i={},o="Setting Up ExLaunch",l={unversionedId:"exefs/exlaunch",id:"exefs/exlaunch",title:"Setting Up ExLaunch",description:"Introduction",source:"@site/rom-hacking/exefs/exlaunch.md",sourceDirName:"exefs",slug:"/exefs/exlaunch",permalink:"/rom-hacking/exefs/exlaunch",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Setting Up Ghidra",permalink:"/rom-hacking/exefs/ghidra"},next:{title:"Headers",permalink:"/rom-hacking/exefs/headers"}},s={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Setting Up the Enviroment",id:"setting-up-the-enviroment",level:2}],u={toc:p},m="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"setting-up-exlaunch"},"Setting Up ExLaunch"),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"ExLaunch is a modding template that allows us to inject new C/C++ code into the ExeFS with minimal knowledge of ARM OpCodes.\nSo far, building has only been tested with Linux and WSL. If you get it working on native windows feel free to update this.\nThis guide assumes you're using Windows Subsystem for Linux. The setup is pretty straightforward, if you can use a Linux operating system you can probably work out how to get it going on your own."),(0,r.kt)("h2",{id:"requirements"},"Requirements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Windows Subsystem for Linux (WSL/WSL2)"),(0,r.kt)("li",{parentName:"ul"},"A Linux build in WSL"),(0,r.kt)("li",{parentName:"ul"},"I recommend ",(0,r.kt)("a",{parentName:"li",href:"https://aka.ms/terminal"},"Windows Terminal")," too (This is installed by default in Windows 11)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://devkitpro.org/"},"devkitPro")),(0,r.kt)("li",{parentName:"ul"},"Python"),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("a",{parentName:"li",href:"https://www.keystone-engine.org/"},"Keystone-Engine")," Python Module"),(0,r.kt)("li",{parentName:"ul"},"CMake"),(0,r.kt)("li",{parentName:"ul"},"Either the ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/Martmists-GH/BDSP_rombase"},"ExLaunch Template")," repo or the ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/TeamLumi/Luminescent_ExLaunch"},"Luminescent fork")," of it")),(0,r.kt)("h2",{id:"setting-up-the-enviroment"},"Setting Up the Enviroment"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install/Enable WSL. It is enabled by default on newer builds of windows but if not simply run this command in Powershell as an administrator."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},"wsl --install\n")),(0,r.kt)("p",{parentName:"li"},"I also recommend using WSL2 as it has some extra features. New installs should use this by default but if you're still on WSL1 use this command to upgrade.  "),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},"wsl --set-default-version 2\n")),(0,r.kt)("p",{parentName:"li"},"See ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/windows/wsl/install"},"This Microsoft Article")," for more info")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install a Linux build. I prefer Ubuntu as it has a lot of community support.  "),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"You can either install it from the ",(0,r.kt)("a",{parentName:"p",href:"https://www.microsoft.com/p/ubuntu/9pdxgncfsczv"},"Microsoft Store Page")," or install it with a Powershell command."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},"wsl --install -d Ubuntu\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Once Installed, Open/Run it from the start menu, the store page, or from within Terminal and set up your account.")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install devkitPro tools and libraries in Ubuntu."),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Follow the instructions on this page to install ",(0,r.kt)("a",{parentName:"p",href:"https://devkitpro.org/wiki/devkitPro_pacman"},"devkitPro Pacman"),"  "),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://apt.devkitpro.org/install-devkitpro-pacman\nchmod +x ./install-devkitpro-pacman\nsudo ./install-devkitpro-pacman\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install the ",(0,r.kt)("inlineCode",{parentName:"p"},"switch-dev")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"switch-portlibs")," package groups using devkitPro Pacman. (While all the packages in these groups are not necessary, they are handy to have anyway)"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"```bash\nsudo dkp-pacman -Sy\nsudo dkp-pacman -S switch-dev\nsudo dkp-pacman -S switch-portlibs\n```\n")),(0,r.kt)("p",{parentName:"li"},"Once you have installed devkitPro you will need to log out and back in to Ubuntu to get it working. or run this command to make it work immediately."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"source /etc/profile.d/devkit-env.sh\n"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install Python, either on Ubuntu or Windows. Ubuntu should have ",(0,r.kt)("inlineCode",{parentName:"p"},"python3")," installed by default but not ",(0,r.kt)("inlineCode",{parentName:"p"},"pip"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"python-is-python3")," is also handy to have."),(0,r.kt)("p",{parentName:"li"},"For Ubuntu:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt update\nsudo apt install python-is-python3 pip\n")),(0,r.kt)("p",{parentName:"li"},"For Windows, you can get the installer from ",(0,r.kt)("a",{parentName:"p",href:"https://www.python.org/downloads/"},"python.org"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install The Keystone-Engine Python Module."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pip install keystone-engine\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install the latest version of ",(0,r.kt)("inlineCode",{parentName:"p"},"CMake")," on Ubuntu. The latest version is available from the ",(0,r.kt)("a",{parentName:"p",href:"https://apt.kitware.com/"},"kitware APT repo"),"."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt update\nsudo apt install -y software-properties-common lsb-release gpg wget apt-transport-https\nwget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null\necho 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ $(lsb_release -cs) main' | sudo tee /etc/apt/sources.list.d/kitware.list >/dev/null\nsudo apt update\nsudo rm /usr/share/keyrings/kitware-archive-keyring.gpg\nsudo apt-get install kitware-archive-keyring\nsudo apt install cmake\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Clone the ExLaunch repo either to Ubuntu or Windows. Ubuntu should come with git for it already. For Windows you can download it from the ",(0,r.kt)("a",{parentName:"p",href:"https://git-scm.com/downloads"},"Git website")," if you don't have it already."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"// If you want to start from the ROM Base\ngit clone https://github.com/Martmists-GH/BDSP_rombase.git\n\n// If you want to start from Luminescent\ngit clone https://github.com/TeamLumi/Luminescent_ExLaunch.git\n")))))}c.isMDXComponent=!0}}]);