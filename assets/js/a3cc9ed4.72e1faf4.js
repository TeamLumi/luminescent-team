"use strict";(self.webpackChunkluminescent_team=self.webpackChunkluminescent_team||[]).push([[133853],{603905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var r=n(667294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),u=p(n),k=a,d=u["".concat(c,".").concat(k)]||u[k]||s[k]||o;return n?r.createElement(d,l(l({ref:t},m),{},{components:n})):r.createElement(d,l({ref:t},m))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=k;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},528799:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>s,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=n(487462),a=(n(667294),n(603905));const o={},l="(19) _CMPWK",i={unversionedId:"scripting/commands/logic/cmpwk",id:"scripting/commands/logic/cmpwk",title:"(19) _CMPWK",description:"Effect",source:"@site/rom-hacking/scripting/commands/logic/019-cmpwk.md",sourceDirName:"scripting/commands/logic",slug:"/scripting/commands/logic/cmpwk",permalink:"/rom-hacking/scripting/commands/logic/cmpwk",draft:!1,tags:[],version:"current",sidebarPosition:19,frontMatter:{},sidebar:"docs",previous:{title:"(3) _END",permalink:"/rom-hacking/scripting/commands/logic/end"},next:{title:"(24) _JUMP",permalink:"/rom-hacking/scripting/commands/logic/jump"}},c={},p=[{value:"Effect",id:"effect",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Example",id:"example",level:2}],m={toc:p},u="wrapper";function s(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"19-_cmpwk"},"(19) _CMPWK"),(0,a.kt)("h2",{id:"effect"},"Effect"),(0,a.kt)("p",null,"Compares the value of a work to the value of another work."),(0,a.kt)("p",null,"When passing a work, it will check its value and use that as the work to use. When passing a float, it will use that value as the work to use."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Broken and always considers ",(0,a.kt)("strong",{parentName:"p"},"work1")," as greater.")),(0,a.kt)("h2",{id:"syntax"},"Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"_CMPWK(work1, work2)\n")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Argument"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:null},"Types"),(0,a.kt)("th",{parentName:"tr",align:null},"Required"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"work1")),(0,a.kt)("td",{parentName:"tr",align:null},"The work to compare"),(0,a.kt)("td",{parentName:"tr",align:null},"Work, Float"),(0,a.kt)("td",{parentName:"tr",align:null},"Required")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"work2")),(0,a.kt)("td",{parentName:"tr",align:null},"The work to compare to"),(0,a.kt)("td",{parentName:"tr",align:null},"Work, Float"),(0,a.kt)("td",{parentName:"tr",align:null},"Required")))),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"_LDVAL(@LOCALWORK4, 9)\n_LDVAL(@LOCALWORK8, 13)\n_LDVAL(@LOCALWORK1, 4)\n_CMPWK(@LOCALWORK1, 8)\n_IF_JUMP('EQ', 'ev_dummy')\n")),(0,a.kt)("p",null,"The above script will set:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Work variable @LOCALWORK4 to 9;"),(0,a.kt)("li",{parentName:"ul"},"Work variable @LOCALWORK8 to 13;"),(0,a.kt)("li",{parentName:"ul"},"Work variable @LOCALWORK1 to 4.")),(0,a.kt)("p",null,"Then, the values of work 4 (@LOCALWORK4) and work 8 (@LOCALWORK8) are compared. Due to a bug, no matter their values, @LOCALWORK4 is determined to be greater."),(0,a.kt)("p",null,'Next, the result of the comparison is checked. Since the result is "greater" and not "equal", ev_dummy is not jumped to and script execution continues on the next line.'))}s.isMDXComponent=!0}}]);